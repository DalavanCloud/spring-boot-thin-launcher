import org.gradle.internal.jvm.Jvm;

buildscript {
	ext {
		springBootVersion = '1.5.0.BUILD-SNAPSHOT'
		wrapperVersion = '0.0.1.BUILD-SNAPSHOT'
	}
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot.experimental:spring-boot-thin-launcher:${wrapperVersion}")
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

task libs << {
	def file = new File('build/resources/main/META-INF/dependencies.properties')
	file.text=''
	configurations.runtime.dependencies.each { def version = it.version ? ":${it.version}" : ""; file << "dependencies.${it.name}=${it.group}:${it.name}${version}\n" }
	configurations.compile.dependencies.each { def version = it.version ? ":${it.version}" : "";file << "dependencies.${it.name}=${it.group}:${it.name}${version}\n" }
}

jar {
	baseName = 'app'
	version = '0.0.1-SNAPSHOT'
}

task(prepareResolve, type: Copy) {
	dependsOn = [bootRepackage]
	from jar.archivePath
	into "${buildDir}/thin/root"
}

task(resolve, type: Exec) {
	dependsOn = [prepareResolve]
	workingDir "${buildDir}/thin/root"
	commandLine Jvm.current().javaExecutable
	args "-Dthin.root=.", "-Dthin.dryrun", "-jar", jar.archiveName
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

jar.dependsOn = [libs]